version: '3'

volumes:
  scoap3_local_postgres_data: {}
  scoap3_local_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: scoap3_local_django
    container_name: scoap3_local_django
    depends_on:
      - postgres
      - redis
      - mailhog
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: scoap3_production_postgres
    container_name: scoap3_local_postgres
    volumes:
      - scoap3_local_postgres_data:/var/lib/postgresql/data
      - scoap3_local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres

  docs:
    image: scoap3_local_docs
    container_name: scoap3_local_docs
    build:
      context: .
      dockerfile: ./compose/local/docs/Dockerfile
    env_file:
      - ./.envs/.local/.django
    volumes:
      - ./docs:/docs:z
      - ./config:/app/config:z
      - ./scoap3:/app/scoap3:z
    ports:
      - "9000:9000"
    command: /start-docs

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: scoap3_local_mailhog
    ports:
      - "8025:8025"

  redis:
    image: redis:6
    container_name: scoap3_local_redis
    restart: 'always'
    read_only: true
    ports:
      - '6379:6379'

  celeryworker:
    <<: *django
    image: scoap3_local_celeryworker
    container_name: scoap3_local_celeryworker
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: scoap3_local_celerybeat
    container_name: scoap3_local_celerybeat
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: scoap3_local_flower
    container_name: scoap3_local_flower
    ports:
      - "5555:5555"
    command: /start-flower

  node:
    build:
      context: .
      dockerfile: ./compose/local/node/Dockerfile
    image: scoap3_local_node
    container_name: scoap3_local_node
    depends_on:
      - django
    volumes:
      - .:/app:z
      # http://jdlm.info/articles/2016/03/06/lessons-building-node-app-docker.html
      - /app/node_modules
    command: npm run dev
    ports:
      - "3000:3000"

  opensearch:
    container_name: scoap3_local_opensearch
    build:
      context: .
      dockerfile: ./compose/local/opensearch/Dockerfile
    restart: 'always'
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node1
      - discovery.seed_hosts=opensearch-node1
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - DISABLE_SECURITY_PLUGIN=true
      - 'OPENSEARCH_JAVA_OPTS=-Xms1024m -Xmx1024m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    mem_limit: 2g
    ports:
      - 9200:9200
      - 9300:9300
      - 9600:9600 # performance analysis

  mq:
    image: rabbitmq:3.9.11-management
    restart: 'always'
    container_name: scoap3_local_mq
    ports:
      - '5672:5672'
